import CoursePlanPage from '../page-objects/CoursePlanPage'
import EbookEditorPage from '../page-objects/ResourceLibrary.js/EbookEditorPage'


const backDoor = require('../data/Backdoor.json');
const resourceData = require('../data/ResourceLibrary.json');
const ebookData = require('../data/Ebook.json')


// describe("Open Ebook Editor successfully", () => {
//   const eBook = new EbookEditorPage()
//   beforeEach(() => {
//     cy.launchCourse(backDoor.email, backDoor.course1)
//     cy.url().should('contain', 'course-plan')
//     cy.clickALinkText(resourceData.linkResourceLibrary)
//     cy.url().should('contain', 'catalog')

//   })

//   it("Open Ebook Editor successfully", () => {
//     cy.navigateToItemEditor('eBook Reading')
//     eBook.verifyEbookEditorOpenSuccess()
//   })
// })

describe('Create an ebook assignment successfully', () => {
  const eBook = new EbookEditorPage()
  const coursePlan = new CoursePlanPage()
  beforeEach(() => {
    cy.launchCourse(backDoor.email, backDoor.course1)
    cy.clickALinkText(resourceData.linkResourceLibrary)
    cy.navigateToItemEditor('eBook Reading')
    eBook.verifyEbookEditorOpenSuccess()
  })

  it("Select an eBook by name", () => {
    eBook.selectEbookByName(ebookData.bookName)
    eBook.verifyEbookAssignmentDialogNotExist()
  })

  it('Validate valid/ invalid page range value', () => {
    eBook.selectEbookByName(ebookData.bookName)
    eBook.selectChapterByName(ebookData.chapterName)
    eBook.verifyPagerange(ebookData.pageRanges)
  });

  it('Verify user is able to select multiple chapters & page ranges', () => {
    eBook.selectEbookByName('Fake Cooper Ebook')
    ebookData.multipleChapters.forEach((element) => {
      cy.setChapterAndPageRange(element[0], element[1], element[2])
    })
  })

  it.only("Choose Reading successfully", () => {
    eBook.verifyChooseReadingCorrectly(ebookData.bookName, ebookData.chapterName, '2-22')
  })

  it('Create eBook from Resource Library page successfully', () => {
    eBook.createEbookFromResourcePage(ebookData.bookName, ebookData.chapterName, ebookData.defaultpageRange)
    coursePlan.verifyMoveModalDisplay()
    cy.moveItemToFolder(ebookData.destination, 0)
  });

  // it.only('test', () => {
  //   eBook.selectEbookByName('Fake Cooper Ebook')
  //   ebookData.multipleChapters.forEach((element)=>{
  //   cy.setMultipleChaptersAndPageRange(element[0],element[1],element[2])

  //   })

  // })
})





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































